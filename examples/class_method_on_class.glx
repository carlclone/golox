/*
var m = object.method;
m(argument);


class Box {}

fun notMethod(argument) {
  print "called function with " + argument;
}

var box = Box();
box.function = notMethod;
box.function("argument");

breakfast(omelette.filledWith(cheese), sausage);

var eggs = omelette.filledWith(cheese);
breakfast(eggs, sausage);

fun callback(a, b, c) {
  object.method(a, b, c);
}

takeCallback(callback);

takeCallback(object.method);

class Person {
  sayName() {
    print this.name;
  }
}

var jane = Person();
jane.name = "Jane";

var method = jane.sayName;
method(); // ?

class Person {
  sayName() {
    print this.name;
  }
}

var jane = Person();
jane.name = "Jane";

var bill = Person();
bill.name = "Bill";

bill.sayName = jane.sayName;
bill.sayName(); // ?


class Bacon {
  eat() {
    print "Crunch crunch crunch!";
  }
}

Bacon().eat(); // Prints "Crunch crunch crunch!".
*/